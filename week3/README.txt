01_mem
======
Примеры на размещение переменных в разных областях памяти.

01. ex1_addrs.c
Позволяет изучить размещение разных переменных (расположенных в стеке, в куче, в секции неинициализированных данных) в программах на С. Результаты меняются при компиляции с ключом -static. Почему?

02. ex2_str.c
Не все строковые литералы в программе на C однаково полезны. И размещаться могут в разных областях памяти.

02_libs
=======
Примеры на использование динамических (разделяемых) библиотек.

01. ex1_static.c
Пример статического связывания кода с программой (имеется в виду код функций my_srand() и my_rand()).

02. my_lib.h, my_lib.c
Пример динамической библиотеки, содержащей код функций my_srand() и my_rand().

03. 02_dyn.c
Пример программы, связанной с динамической библиотекой libmy.so при сборке.

04. 03_dl.c
Пример программы, загружающей libmy.so в процессе выполнения.

03_preload
==========
Примеры на использование предварительной загрузки динамических библиотек с помощью LD_PRELOAD.

01. 01_malloc.c
Пример программы с намеренными случайными утечками памяти. Использование LD_PRELOAD=./libmtr.so помогает обнаружить утечки.

02. 02_malloc.c
Пример использования возможностей GNU libc для отслеживания утечек памяти. См. man 3 mtrace.

03. libmtr.c
Пример библиотеки, позволяющей перехватить вызовы malloc(), free() и пр. с помощью механизма LD_PRELOAD.


